// flow-typed signature: a199850206bd22e96eeb7038e509c911
// flow-typed version: <<STUB>>/eslint-plugin-mysticatea_v^4.2.4/flow_v0.68.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'eslint-plugin-mysticatea'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'eslint-plugin-mysticatea' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'eslint-plugin-mysticatea/lib/rules/arrow-parens' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/block-scoped-var' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/no-instanceof-array' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/no-instanceof-wrapper' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/no-literal-call' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/no-this-in-static' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/no-use-ignored-vars' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/no-useless-rest-spread' {
  declare module.exports: any;
}

declare module 'eslint-plugin-mysticatea/lib/rules/prefer-for-of' {
  declare module.exports: any;
}

// Filename aliases
declare module 'eslint-plugin-mysticatea/index' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea'>;
}
declare module 'eslint-plugin-mysticatea/index.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/arrow-parens.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/arrow-parens'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/block-scoped-var.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/block-scoped-var'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/no-instanceof-array.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/no-instanceof-array'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/no-instanceof-wrapper.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/no-instanceof-wrapper'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/no-literal-call.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/no-literal-call'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/no-this-in-static.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/no-this-in-static'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/no-use-ignored-vars.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/no-use-ignored-vars'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/no-useless-rest-spread.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/no-useless-rest-spread'>;
}
declare module 'eslint-plugin-mysticatea/lib/rules/prefer-for-of.js' {
  declare module.exports: $Exports<'eslint-plugin-mysticatea/lib/rules/prefer-for-of'>;
}
